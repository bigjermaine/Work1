// AUTO GENERATED. DO NOT EDIT THIS FILE.
// VERSION 3.5.0 | Last Modified Time: Thu Oct 19 2023 17:57:39 GMT+0200 (Central European Summer Time)
// Copyright Â© 2023 Dexcom, Inc. All rights reserved.

import UIKit
import SwiftUI

/**
* This is supposed to be used in the remaining UIKit parts.
*/
public class ColorTheme {
    /// Light: [dexGray200 / #EEEDED]
    /// Dark: [dexGray900 / #0F1214]
    public static let backgroundPrimary = UIColor(named: ColorNames.backgroundPrimary)
    /// Light: [dexGray0 / #FFFFFF]
    /// Dark: [dexGray850 / #161A1D]
    public static let backgroundSecondary = UIColor(named: ColorNames.backgroundSecondary)
    /// Light: [dexGray300 / #CECDCC]
    /// Dark: [dexGray700 / #293038]
    public static let borderPrimary = UIColor(named: ColorNames.borderPrimary)
    /// Light: [dexGreen500 / #137D00]
    /// Dark: [dexGreen400 / #32AD10]
    public static let borderAccent1 = UIColor(named: ColorNames.borderAccent1)
    /// Light: [dexYellow400 / #FFCC3D]
    /// Dark: [dexGray1000 / #000000]
    public static let borderHigh = UIColor(named: ColorNames.borderHigh)
    /// Light: [dexRed400 / #F73D45]
    /// Dark: [dexGray1000 / #000000]
    public static let borderLow = UIColor(named: ColorNames.borderLow)
    /// Light: [dexGray0 / #FFFFFF]
    /// Dark: [dexGray1000 / #000000]
    public static let borderNormal = UIColor(named: ColorNames.borderNormal)
    /// Light: [dexGray800 / #1A1E23]
    /// Dark: [dexGray0 / #FFFFFF]
    public static let borderPrimaryVariant = UIColor(named: ColorNames.borderPrimaryVariant)
    /// Light: [dexTeal500 / #017B85]
    /// Dark: [dexTeal400 / #2DAAB4]
    public static let eventsDefault = UIColor(named: ColorNames.eventsDefault)
    /// Light: [dexMarine500 / #005C9C]
    /// Dark: [dexMarine400 / #62A0CC]
    public static let eventsLong = UIColor(named: ColorNames.eventsLong)
    /// Light: [dexPurple500 / #620C6E]
    /// Dark: [dexPurple400 / #C183D3]
    public static let eventsShort = UIColor(named: ColorNames.eventsShort)
    /// Light: [dexGray800 / #1A1E23]
    /// Dark: [dexGray200 / #EEEDED]
    public static let iconPrimary = UIColor(named: ColorNames.iconPrimary)
    /// Light: [dexGray800 / #1A1E23]
    /// Dark: [dexYellow300 / #FFD04D]
    public static let iconPrimaryVariant = UIColor(named: ColorNames.iconPrimaryVariant)
    /// Light: [dexGray0 / #FFFFFF]
    /// Dark: [dexRed300 / #F84A51]
    public static let iconPrimaryInverseVariant = UIColor(named: ColorNames.iconPrimaryInverseVariant)
    /// Light: [dexGray500 / #5E6D7E]
    /// Dark: [dexGray400 / #848E9B]
    public static let iconSecondary = UIColor(named: ColorNames.iconSecondary)
    /// Light: [dexGreen500 / #137D00]
    /// Dark: [dexGreen400 / #32AD10]
    public static let iconTertiary = UIColor(named: ColorNames.iconTertiary)
    /// Light: [dexGray0 / #FFFFFF]
    /// Dark: [dexGray850 / #161A1D]
    public static let iconPrimaryInverse = UIColor(named: ColorNames.iconPrimaryInverse)
    /// Light: [dexGray600 / #3F4955]
    /// Dark: [dexGray350 / #B8BABC]
    public static let interactivePrimary = UIColor(named: ColorNames.interactivePrimary)
    /// Light: [dexGray500 / #5E6D7E]
    /// Dark: [dexGray250 / #DCDBDA]
    public static let interactivePrimaryVariant1 = UIColor(named: ColorNames.interactivePrimaryVariant1)
    /// Light: [dexGray0 / #FFFFFF]
    /// Dark: [dexGray750 / #23282F]
    public static let interactivePrimaryInverse = UIColor(named: ColorNames.interactivePrimaryInverse)
    /// Light: [dexGray200 / #EEEDED]
    /// Dark: [dexGray750 / #23282F]
    public static let interactiveSecondary = UIColor(named: ColorNames.interactiveSecondary)
    /// Light: [dexGray250 / #DCDBDA]
    /// Dark: [dexGray650 / #343C46]
    public static let interactiveSecondaryVariant1 = UIColor(named: ColorNames.interactiveSecondaryVariant1)
    /// Light: [dexGray500 / #5E6D7E]
    /// Dark: [dexGray400 / #848E9B]
    public static let interactiveTertiary = UIColor(named: ColorNames.interactiveTertiary)
    /// Light: [dexGray400 / #848E9B]
    /// Dark: [dexGray300 / #CECDCC]
    public static let interactiveTertiaryVariant1 = UIColor(named: ColorNames.interactiveTertiaryVariant1)
    /// Light: [dexGreen500 / #137D00]
    /// Dark: [dexGreen400 / #32AD10]
    public static let interactiveAccent1 = UIColor(named: ColorNames.interactiveAccent1)
    /// Light: [dexGreen400 / #32AD10]
    /// Dark: [dexGreen300 / #65DD46]
    public static let interactiveAccent2 = UIColor(named: ColorNames.interactiveAccent2)
    /// Light: [dexGreen400 / #32AD10]
    /// Dark: [dexGreen500 / #137D00]
    public static let interactiveAccent2Variant1 = UIColor(named: ColorNames.interactiveAccent2Variant1)
    /// Light: [dexRed500 / #D5272F]
    /// Dark: [dexRed400 / #F73D45]
    public static let interactiveDestructive = UIColor(named: ColorNames.interactiveDestructive)
    /// Light: [dexRed400 / #F73D45]
    /// Dark: [dexRed300 / #F84A51]
    public static let interactiveDestructiveVariant1 = UIColor(named: ColorNames.interactiveDestructiveVariant1)
    /// Light: [dexRed400 / #F73D45]
    /// Dark: [dexRed300 / #F84A51]
    public static let statusDanger = UIColor(named: ColorNames.statusDanger)
    /// Light: [dexRed500 / #D5272F]
    /// Dark: [dexRed400 / #F73D45]
    public static let statusDangerVariant = UIColor(named: ColorNames.statusDangerVariant)
    /// Light: [dexOrange500 / #E86E36]
    /// Dark: [dexOrange400 / #E67541]
    public static let statusWarning = UIColor(named: ColorNames.statusWarning)
    /// Light: [dexGreen500 / #137D00]
    /// Dark: [dexGreen400 / #32AD10]
    public static let statusSuccess = UIColor(named: ColorNames.statusSuccess)
    /// Light: [dexGreen400 / #32AD10]
    /// Dark: [dexGreen300 / #65DD46]
    public static let statusSucessVariant = UIColor(named: ColorNames.statusSucessVariant)
    /// Light: [dexOrange500 / #E86E36]
    /// Dark: [dexOrange400 / #E67541]
    public static let statusVeryHigh = UIColor(named: ColorNames.statusVeryHigh)
    /// Light: [dexYellow400 / #FFCC3D]
    /// Dark: [dexYellow300 / #FFD04D]
    public static let statusHigh = UIColor(named: ColorNames.statusHigh)
    /// Light: [dexYellow400 / #FFCC3D]
    /// Dark: [dexYellow900 / #332E06]
    public static let statusHighVariant = UIColor(named: ColorNames.statusHighVariant)
    /// Light: [dexGreen400 / #32AD10]
    /// Dark: [dexGreen300 / #65DD46]
    public static let statusInRange = UIColor(named: ColorNames.statusInRange)
    /// Light: [dexRed400 / #F73D45]
    /// Dark: [dexRed300 / #F84A51]
    public static let statusLow = UIColor(named: ColorNames.statusLow)
    /// Light: [dexRed400 / #F73D45]
    /// Dark: [dexRed900 / #330C0A]
    public static let statusLowVariant1 = UIColor(named: ColorNames.statusLowVariant1)
    /// Light: [dexRed200 / #EF6267]
    /// Dark: [dexRed100 / #F67378]
    public static let statusLowVariant2 = UIColor(named: ColorNames.statusLowVariant2)
    /// Light: [dexGray0 / #FFFFFF]
    /// Dark: [dexGray850 / #161A1D]
    public static let statusNormal = UIColor(named: ColorNames.statusNormal)
    /// Light: [dexGray200 / #EEEDED]
    /// Dark: [dexGray900 / #0F1214]
    public static let statusNormalVariant = UIColor(named: ColorNames.statusNormalVariant)
    /// Light: [dexPurple400 / #C183D3]
    /// Dark: [dexPurple300 / #C183D3]
    public static let statusFast = UIColor(named: ColorNames.statusFast)
    /// Light: [dexPurple500 / #620C6E]
    /// Dark: [dexPurple400 / #C183D3]
    public static let statusFastVariant = UIColor(named: ColorNames.statusFastVariant)
    /// Light: [dexMarine400 / #62A0CC]
    /// Dark: [dexMarine300 / #B9CFDF]
    public static let statusLong = UIColor(named: ColorNames.statusLong)
    /// Light: [dexMarine500 / #005C9C]
    /// Dark: [dexMarine400 / #62A0CC]
    public static let statusLongVariant = UIColor(named: ColorNames.statusLongVariant)
    /// Light: [dexGray0 / #FFFFFF]
    /// Dark: [dexGray850 / #161A1D]
    public static let surfacePrimary = UIColor(named: ColorNames.surfacePrimary)
    /// Light: [dexGray200 / #EEEDED]
    /// Dark: [dexGray900 / #0F1214]
    public static let surfaceSecondary = UIColor(named: ColorNames.surfaceSecondary)
    /// Light: [dexGray100 / #FAFAFA]
    /// Dark: [dexGray800 / #1A1E23]
    public static let surfaceTertiary = UIColor(named: ColorNames.surfaceTertiary)
    /// Light: [dexGray700 / #293038]
    /// Dark: [dexGray300 / #CECDCC]
    public static let surfacePrimaryInverse = UIColor(named: ColorNames.surfacePrimaryInverse)
    /// Light: [dexGray1000 / #000000]
    /// Dark: [dexGray200 / #EEEDED]
    public static let surfaceSecondaryInverse = UIColor(named: ColorNames.surfaceSecondaryInverse)
    /// Light: [dexApricot300 / #FDD3B7]
    /// Dark: [dexGray750 / #23282F]
    public static let surfaceDecorative1 = UIColor(named: ColorNames.surfaceDecorative1)
    /// Light: [dexGreen500 / #137D00]
    /// Dark: [dexGreen400 / #32AD10]
    public static let surfaceDecorative2 = UIColor(named: ColorNames.surfaceDecorative2)
    /// Light: [dexGray350 / #B8BABC]
    /// Dark: [dexGray650 / #343C46]
    public static let surfaceDecorative3 = UIColor(named: ColorNames.surfaceDecorative3)
    /// Light: [dexGray0 / #FFFFFF]
    /// Dark: [dexGray700 / #293038]
    public static let surfacePrimaryVariant = UIColor(named: ColorNames.surfacePrimaryVariant)
    /// Light: [dexGray700 / #293038]
    /// Dark: [dexGray200 / #EEEDED]
    public static let surfacePrimaryInverseVariant = UIColor(named: ColorNames.surfacePrimaryInverseVariant)
    /// Light: [dexGray800 / #1A1E23]
    /// Dark: [dexGray200 / #EEEDED]
    public static let textPrimary = UIColor(named: ColorNames.textPrimary)
    /// Light: [dexGray800 / #1A1E23]
    /// Dark: [dexYellow300 / #FFD04D]
    public static let textPrimaryVariant = UIColor(named: ColorNames.textPrimaryVariant)
    /// Light: [dexGray0 / #FFFFFF]
    /// Dark: [dexRed300 / #F84A51]
    public static let textPrimaryInverseVariant = UIColor(named: ColorNames.textPrimaryInverseVariant)
    /// Light: [dexGray500 / #5E6D7E]
    /// Dark: [dexGray400 / #848E9B]
    public static let textSecondary = UIColor(named: ColorNames.textSecondary)
    /// Light: [dexGreen500 / #137D00]
    /// Dark: [dexGreen400 / #32AD10]
    public static let textDecorative1 = UIColor(named: ColorNames.textDecorative1)
    /// Light: [dexGray0 / #FFFFFF]
    /// Dark: [dexGray850 / #161A1D]
    public static let textPrimaryInverse = UIColor(named: ColorNames.textPrimaryInverse)
    /// Light: [dexGray1000 / #000000]
    /// Dark: [transparent / #FFFFFF]
    public static let elevation = UIColor(named: ColorNames.elevation)
}

/**
* This is for being able to reference the color tokens in a type safe way and get IntelliSense.
*/
public struct ColorNames {
    public static let backgroundPrimary = "backgroundPrimary"
    public static let backgroundSecondary = "backgroundSecondary"
    public static let borderPrimary = "borderPrimary"
    public static let borderAccent1 = "borderAccent1"
    public static let borderHigh = "borderHigh"
    public static let borderLow = "borderLow"
    public static let borderNormal = "borderNormal"
    public static let borderPrimaryVariant = "borderPrimaryVariant"
    public static let eventsDefault = "eventsDefault"
    public static let eventsLong = "eventsLong"
    public static let eventsShort = "eventsShort"
    public static let iconPrimary = "iconPrimary"
    public static let iconPrimaryVariant = "iconPrimaryVariant"
    public static let iconPrimaryInverseVariant = "iconPrimaryInverseVariant"
    public static let iconSecondary = "iconSecondary"
    public static let iconTertiary = "iconTertiary"
    public static let iconPrimaryInverse = "iconPrimaryInverse"
    public static let interactivePrimary = "interactivePrimary"
    public static let interactivePrimaryVariant1 = "interactivePrimaryVariant1"
    public static let interactivePrimaryInverse = "interactivePrimaryInverse"
    public static let interactiveSecondary = "interactiveSecondary"
    public static let interactiveSecondaryVariant1 = "interactiveSecondaryVariant1"
    public static let interactiveTertiary = "interactiveTertiary"
    public static let interactiveTertiaryVariant1 = "interactiveTertiaryVariant1"
    public static let interactiveAccent1 = "interactiveAccent1"
    public static let interactiveAccent2 = "interactiveAccent2"
    public static let interactiveAccent2Variant1 = "interactiveAccent2Variant1"
    public static let interactiveDestructive = "interactiveDestructive"
    public static let interactiveDestructiveVariant1 = "interactiveDestructiveVariant1"
    public static let statusDanger = "statusDanger"
    public static let statusDangerVariant = "statusDangerVariant"
    public static let statusWarning = "statusWarning"
    public static let statusSuccess = "statusSuccess"
    public static let statusSucessVariant = "statusSucessVariant"
    public static let statusVeryHigh = "statusVeryHigh"
    public static let statusHigh = "statusHigh"
    public static let statusHighVariant = "statusHighVariant"
    public static let statusInRange = "statusInRange"
    public static let statusLow = "statusLow"
    public static let statusLowVariant1 = "statusLowVariant1"
    public static let statusLowVariant2 = "statusLowVariant2"
    public static let statusNormal = "statusNormal"
    public static let statusNormalVariant = "statusNormalVariant"
    public static let statusFast = "statusFast"
    public static let statusFastVariant = "statusFastVariant"
    public static let statusLong = "statusLong"
    public static let statusLongVariant = "statusLongVariant"
    public static let surfacePrimary = "surfacePrimary"
    public static let surfaceSecondary = "surfaceSecondary"
    public static let surfaceTertiary = "surfaceTertiary"
    public static let surfacePrimaryInverse = "surfacePrimaryInverse"
    public static let surfaceSecondaryInverse = "surfaceSecondaryInverse"
    public static let surfaceDecorative1 = "surfaceDecorative1"
    public static let surfaceDecorative2 = "surfaceDecorative2"
    public static let surfaceDecorative3 = "surfaceDecorative3"
    public static let surfacePrimaryVariant = "surfacePrimaryVariant"
    public static let surfacePrimaryInverseVariant = "surfacePrimaryInverseVariant"
    public static let textPrimary = "textPrimary"
    public static let textPrimaryVariant = "textPrimaryVariant"
    public static let textPrimaryInverseVariant = "textPrimaryInverseVariant"
    public static let textSecondary = "textSecondary"
    public static let textDecorative1 = "textDecorative1"
    public static let textPrimaryInverse = "textPrimaryInverse"
    public static let elevation = "elevation"
}

public extension ShapeStyle where Self == Color {
    static var polarisColors: Color.PolarisDesignColorTokensSwiftUI { Color.polarisColors }
}

public extension Color {
    static let polarisColors = Color.PolarisDesignColorTokensSwiftUI()
    static let transparent = Color(.displayP3, white: 0, opacity: 0)

    struct PolarisDesignColorTokensSwiftUI {
        /// Light: [dexGray200 / #EEEDED]
        /// Dark: [dexGray900 / #0F1214]
        public let backgroundPrimary = Color(ColorNames.backgroundPrimary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray0 / #FFFFFF]
        /// Dark: [dexGray850 / #161A1D]
        public let backgroundSecondary = Color(ColorNames.backgroundSecondary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray300 / #CECDCC]
        /// Dark: [dexGray700 / #293038]
        public let borderPrimary = Color(ColorNames.borderPrimary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGreen500 / #137D00]
        /// Dark: [dexGreen400 / #32AD10]
        public let borderAccent1 = Color(ColorNames.borderAccent1, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexYellow400 / #FFCC3D]
        /// Dark: [dexGray1000 / #000000]
        public let borderHigh = Color(ColorNames.borderHigh, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexRed400 / #F73D45]
        /// Dark: [dexGray1000 / #000000]
        public let borderLow = Color(ColorNames.borderLow, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray0 / #FFFFFF]
        /// Dark: [dexGray1000 / #000000]
        public let borderNormal = Color(ColorNames.borderNormal, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray800 / #1A1E23]
        /// Dark: [dexGray0 / #FFFFFF]
        public let borderPrimaryVariant = Color(ColorNames.borderPrimaryVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexTeal500 / #017B85]
        /// Dark: [dexTeal400 / #2DAAB4]
        public let eventsDefault = Color(ColorNames.eventsDefault, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexMarine500 / #005C9C]
        /// Dark: [dexMarine400 / #62A0CC]
        public let eventsLong = Color(ColorNames.eventsLong, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexPurple500 / #620C6E]
        /// Dark: [dexPurple400 / #C183D3]
        public let eventsShort = Color(ColorNames.eventsShort, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray800 / #1A1E23]
        /// Dark: [dexGray200 / #EEEDED]
        public let iconPrimary = Color(ColorNames.iconPrimary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray800 / #1A1E23]
        /// Dark: [dexYellow300 / #FFD04D]
        public let iconPrimaryVariant = Color(ColorNames.iconPrimaryVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray0 / #FFFFFF]
        /// Dark: [dexRed300 / #F84A51]
        public let iconPrimaryInverseVariant = Color(ColorNames.iconPrimaryInverseVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray500 / #5E6D7E]
        /// Dark: [dexGray400 / #848E9B]
        public let iconSecondary = Color(ColorNames.iconSecondary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGreen500 / #137D00]
        /// Dark: [dexGreen400 / #32AD10]
        public let iconTertiary = Color(ColorNames.iconTertiary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray0 / #FFFFFF]
        /// Dark: [dexGray850 / #161A1D]
        public let iconPrimaryInverse = Color(ColorNames.iconPrimaryInverse, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray600 / #3F4955]
        /// Dark: [dexGray350 / #B8BABC]
        public let interactivePrimary = Color(ColorNames.interactivePrimary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray500 / #5E6D7E]
        /// Dark: [dexGray250 / #DCDBDA]
        public let interactivePrimaryVariant1 = Color(ColorNames.interactivePrimaryVariant1, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray0 / #FFFFFF]
        /// Dark: [dexGray750 / #23282F]
        public let interactivePrimaryInverse = Color(ColorNames.interactivePrimaryInverse, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray200 / #EEEDED]
        /// Dark: [dexGray750 / #23282F]
        public let interactiveSecondary = Color(ColorNames.interactiveSecondary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray250 / #DCDBDA]
        /// Dark: [dexGray650 / #343C46]
        public let interactiveSecondaryVariant1 = Color(ColorNames.interactiveSecondaryVariant1, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray500 / #5E6D7E]
        /// Dark: [dexGray400 / #848E9B]
        public let interactiveTertiary = Color(ColorNames.interactiveTertiary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray400 / #848E9B]
        /// Dark: [dexGray300 / #CECDCC]
        public let interactiveTertiaryVariant1 = Color(ColorNames.interactiveTertiaryVariant1, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGreen500 / #137D00]
        /// Dark: [dexGreen400 / #32AD10]
        public let interactiveAccent1 = Color(ColorNames.interactiveAccent1, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGreen400 / #32AD10]
        /// Dark: [dexGreen300 / #65DD46]
        public let interactiveAccent2 = Color(ColorNames.interactiveAccent2, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGreen400 / #32AD10]
        /// Dark: [dexGreen500 / #137D00]
        public let interactiveAccent2Variant1 = Color(ColorNames.interactiveAccent2Variant1, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexRed500 / #D5272F]
        /// Dark: [dexRed400 / #F73D45]
        public let interactiveDestructive = Color(ColorNames.interactiveDestructive, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexRed400 / #F73D45]
        /// Dark: [dexRed300 / #F84A51]
        public let interactiveDestructiveVariant1 = Color(ColorNames.interactiveDestructiveVariant1, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexRed400 / #F73D45]
        /// Dark: [dexRed300 / #F84A51]
        public let statusDanger = Color(ColorNames.statusDanger, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexRed500 / #D5272F]
        /// Dark: [dexRed400 / #F73D45]
        public let statusDangerVariant = Color(ColorNames.statusDangerVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexOrange500 / #E86E36]
        /// Dark: [dexOrange400 / #E67541]
        public let statusWarning = Color(ColorNames.statusWarning, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGreen500 / #137D00]
        /// Dark: [dexGreen400 / #32AD10]
        public let statusSuccess = Color(ColorNames.statusSuccess, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGreen400 / #32AD10]
        /// Dark: [dexGreen300 / #65DD46]
        public let statusSucessVariant = Color(ColorNames.statusSucessVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexOrange500 / #E86E36]
        /// Dark: [dexOrange400 / #E67541]
        public let statusVeryHigh = Color(ColorNames.statusVeryHigh, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexYellow400 / #FFCC3D]
        /// Dark: [dexYellow300 / #FFD04D]
        public let statusHigh = Color(ColorNames.statusHigh, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexYellow400 / #FFCC3D]
        /// Dark: [dexYellow900 / #332E06]
        public let statusHighVariant = Color(ColorNames.statusHighVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGreen400 / #32AD10]
        /// Dark: [dexGreen300 / #65DD46]
        public let statusInRange = Color(ColorNames.statusInRange, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexRed400 / #F73D45]
        /// Dark: [dexRed300 / #F84A51]
        public let statusLow = Color(ColorNames.statusLow, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexRed400 / #F73D45]
        /// Dark: [dexRed900 / #330C0A]
        public let statusLowVariant1 = Color(ColorNames.statusLowVariant1, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexRed200 / #EF6267]
        /// Dark: [dexRed100 / #F67378]
        public let statusLowVariant2 = Color(ColorNames.statusLowVariant2, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray0 / #FFFFFF]
        /// Dark: [dexGray850 / #161A1D]
        public let statusNormal = Color(ColorNames.statusNormal, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray200 / #EEEDED]
        /// Dark: [dexGray900 / #0F1214]
        public let statusNormalVariant = Color(ColorNames.statusNormalVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexPurple400 / #C183D3]
        /// Dark: [dexPurple300 / #C183D3]
        public let statusFast = Color(ColorNames.statusFast, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexPurple500 / #620C6E]
        /// Dark: [dexPurple400 / #C183D3]
        public let statusFastVariant = Color(ColorNames.statusFastVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexMarine400 / #62A0CC]
        /// Dark: [dexMarine300 / #B9CFDF]
        public let statusLong = Color(ColorNames.statusLong, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexMarine500 / #005C9C]
        /// Dark: [dexMarine400 / #62A0CC]
        public let statusLongVariant = Color(ColorNames.statusLongVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray0 / #FFFFFF]
        /// Dark: [dexGray850 / #161A1D]
        public let surfacePrimary = Color(ColorNames.surfacePrimary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray200 / #EEEDED]
        /// Dark: [dexGray900 / #0F1214]
        public let surfaceSecondary = Color(ColorNames.surfaceSecondary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray100 / #FAFAFA]
        /// Dark: [dexGray800 / #1A1E23]
        public let surfaceTertiary = Color(ColorNames.surfaceTertiary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray700 / #293038]
        /// Dark: [dexGray300 / #CECDCC]
        public let surfacePrimaryInverse = Color(ColorNames.surfacePrimaryInverse, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray1000 / #000000]
        /// Dark: [dexGray200 / #EEEDED]
        public let surfaceSecondaryInverse = Color(ColorNames.surfaceSecondaryInverse, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexApricot300 / #FDD3B7]
        /// Dark: [dexGray750 / #23282F]
        public let surfaceDecorative1 = Color(ColorNames.surfaceDecorative1, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGreen500 / #137D00]
        /// Dark: [dexGreen400 / #32AD10]
        public let surfaceDecorative2 = Color(ColorNames.surfaceDecorative2, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray350 / #B8BABC]
        /// Dark: [dexGray650 / #343C46]
        public let surfaceDecorative3 = Color(ColorNames.surfaceDecorative3, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray0 / #FFFFFF]
        /// Dark: [dexGray700 / #293038]
        public let surfacePrimaryVariant = Color(ColorNames.surfacePrimaryVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray700 / #293038]
        /// Dark: [dexGray200 / #EEEDED]
        public let surfacePrimaryInverseVariant = Color(ColorNames.surfacePrimaryInverseVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray800 / #1A1E23]
        /// Dark: [dexGray200 / #EEEDED]
        public let textPrimary = Color(ColorNames.textPrimary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray800 / #1A1E23]
        /// Dark: [dexYellow300 / #FFD04D]
        public let textPrimaryVariant = Color(ColorNames.textPrimaryVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray0 / #FFFFFF]
        /// Dark: [dexRed300 / #F84A51]
        public let textPrimaryInverseVariant = Color(ColorNames.textPrimaryInverseVariant, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray500 / #5E6D7E]
        /// Dark: [dexGray400 / #848E9B]
        public let textSecondary = Color(ColorNames.textSecondary, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGreen500 / #137D00]
        /// Dark: [dexGreen400 / #32AD10]
        public let textDecorative1 = Color(ColorNames.textDecorative1, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray0 / #FFFFFF]
        /// Dark: [dexGray850 / #161A1D]
        public let textPrimaryInverse = Color(ColorNames.textPrimaryInverse, bundle: PhoenixSwiftUIKitResources.bundle)
        /// Light: [dexGray1000 / #000000]
        /// Dark: [transparent / #FFFFFF]
        public let elevation = Color(ColorNames.elevation, bundle: PhoenixSwiftUIKitResources.bundle)
    }
}
